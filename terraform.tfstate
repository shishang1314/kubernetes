{
  "version": 4,
  "terraform_version": "1.7.3",
  "serial": 85,
  "lineage": "a14246a6-3e35-4202-0514-43efc47682bf",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "alertmanager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "alertmanager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "alertmanager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.24.0",
                "chart": "alertmanager",
                "first_deployed": 1723636185,
                "last_deployed": 1723636185,
                "name": "alertmanager",
                "namespace": "default",
                "notes": "1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=alertmanager\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9093 to use your application\"\n  kubectl --namespace default port-forward $POD_NAME 9093:80\n",
                "revision": 1,
                "values": "{\"alertmanagerSpec\":{\"receivers\":[{\"email_configs\":[{\"send_resolved\":true,\"to\":\"your-email@example.com\"}],\"name\":\"default\"}],\"route\":{\"group_by\":[\"alertname\"],\"group_interval\":\"5m\",\"group_wait\":\"10s\",\"receiver\":\"default\",\"repeat_interval\":\"3h\"},\"storage\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}}}}}}}",
                "version": "0.23.0"
              }
            ],
            "name": "alertmanager",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "alertmanagerSpec:\n  storage:\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n\n  route:\n    receiver: \"default\"\n    group_by: [\"alertname\"]\n    group_wait: 10s\n    group_interval: 5m\n    repeat_interval: 3h\n\n  receivers:\n    - name: \"default\"\n      email_configs:\n        - to: \"your-email@example.com\"\n          send_resolved: true\n"
            ],
            "verify": false,
            "version": "0.23.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "grafana",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "10.1.0",
                "chart": "grafana",
                "first_deployed": 1723794212,
                "last_deployed": 1723794212,
                "name": "grafana",
                "namespace": "default",
                "notes": "1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace default grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 30001 on the following DNS name from within your cluster:\n\n   grafana.default.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export NODE_PORT=$(kubectl get --namespace default -o jsonpath=\"{.spec.ports[0].nodePort}\" services grafana)\n     export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n     echo http://$NODE_IP:$NODE_PORT\n\n3. Login with the password from step 1 and the username: admin\n",
                "revision": 1,
                "values": "{\"adminPassword\":\"admin\",\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"10Gi\",\"storageClassName\":\"default\"},\"plugins\":[\"grafana-clock-panel\",\"grafana-piechart-panel\",\"grafana-simple-json-datasource\"],\"service\":{\"annotations\":{\"service.beta.kubernetes.io/aws-load-balancer-internal\":\"true\"},\"nodePort\":32000,\"port\":30001,\"type\":\"NodePort\"}}",
                "version": "6.59.0"
              }
            ],
            "name": "grafana",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://grafana.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "adminPassword: \"admin\"\nservice:\n  type: NodePort\n  port: 30001\n  nodePort: 32000\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-internal: \"true\"\n\npersistence:\n  enabled: true\n  storageClassName: \"default\"\n  accessModes:\n    - \"ReadWriteOnce\"\n  size: 10Gi\n\nplugins:\n  - grafana-clock-panel\n  - grafana-piechart-panel\n  - grafana-simple-json-datasource\n"
            ],
            "verify": false,
            "version": "6.59.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "prometheus",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.31.1",
                "chart": "prometheus",
                "first_deployed": 1723713050,
                "last_deployed": 1723713050,
                "name": "prometheus",
                "namespace": "default",
                "notes": "kube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.default.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\n\nThe Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-server.default.svc.cluster.local\n\n\nGet the Prometheus server URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=server\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9090\n\n\nThe Prometheus alertmanager can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-alertmanager.default.svc.cluster.local\n\n\nGet the Alertmanager URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=alertmanager\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9093\n#################################################################################\n######   WARNING: Pod Security Policy has been moved to a global property.  #####\n######            use .Values.podSecurityPolicy.enabled with pod-based      #####\n######            annotations                                               #####\n######            (e.g. .Values.nodeExporter.podSecurityPolicy.annotations) #####\n#################################################################################\n\n\nThe Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:\nprometheus-pushgateway.default.svc.cluster.local\n\n\nGet the PushGateway URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace default -l \"app=prometheus,component=pushgateway\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace default port-forward $POD_NAME 9091\n\nFor more information on running Prometheus, visit:\nhttps://prometheus.io/\n",
                "revision": 1,
                "values": "{\"server\":{\"global\":{\"scrape_interval\":\"15s\"},\"scrape_configs\":[{\"job_name\":\"kubernetes-apiservers\",\"kubernetes_sd_configs\":[{\"role\":\"endpoints\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":\"kubernetes\",\"source_labels\":[\"__meta_kubernetes_service_name\"]}]},{\"job_name\":\"kubernetes-nodes\",\"kubernetes_sd_configs\":[{\"role\":\"node\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":\"amd64\",\"source_labels\":[\"__meta_kubernetes_node_label_kubernetes_io_arch\"]}]},{\"job_name\":\"kubernetes-pods\",\"kubernetes_sd_configs\":[{\"role\":\"pod\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":\".*\",\"source_labels\":[\"__meta_kubernetes_pod_label_app\"]}]}]}}",
                "version": "15.1.0"
              }
            ],
            "name": "prometheus",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "server:\n  global:\n    scrape_interval: 15s\n  scrape_configs:\n    - job_name: 'kubernetes-apiservers'\n      kubernetes_sd_configs:\n        - role: endpoints\n      relabel_configs:\n        - source_labels: [__meta_kubernetes_service_name]\n          action: keep\n          regex: kubernetes\n    - job_name: 'kubernetes-nodes'\n      kubernetes_sd_configs:\n        - role: node\n      relabel_configs:\n        - source_labels: [__meta_kubernetes_node_label_kubernetes_io_arch]\n          action: keep\n          regex: amd64\n    - job_name: 'kubernetes-pods'\n      kubernetes_sd_configs:\n        - role: pod\n      relabel_configs:\n        - source_labels: [__meta_kubernetes_pod_label_app]\n          action: keep\n          regex: .*\n"
            ],
            "verify": false,
            "version": "15.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.nginx-namespace",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "nginx-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/nginx-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "nginx-deployment",
                "namespace": "default",
                "resource_version": "56076",
                "uid": "675708d4-1415-4663-82c5-6cd15820603e"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "2",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "nginx"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "nginx"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [
                          {
                            "node_affinity": [
                              {
                                "preferred_during_scheduling_ignored_during_execution": [],
                                "required_during_scheduling_ignored_during_execution": [
                                  {
                                    "node_selector_term": [
                                      {
                                        "match_expressions": [
                                          {
                                            "key": "app",
                                            "operator": "In",
                                            "values": [
                                              "nginx"
                                            ]
                                          }
                                        ],
                                        "match_fields": []
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "pod_affinity": [],
                            "pod_anti_affinity": []
                          }
                        ],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "-c",
                              "POD_IP=$(cat /etc/podinfo/pod_ip)\necho \"Pod IP: $POD_IP\" \u003e /usr/share/nginx/html/index.html\nexec nginx -g 'daemon off;'\n"
                            ],
                            "command": [
                              "/bin/sh"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "nginx:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "nginx",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/usr/share/nginx/html",
                                "mount_propagation": "None",
                                "name": "nginx-config",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/podinfo",
                                "mount_propagation": "None",
                                "name": "pod-info",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [
                          {
                            "args": [
                              "echo $(hostname -i) \u003e /etc/podinfo/pod_ip"
                            ],
                            "command": [
                              "/bin/sh",
                              "-c"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "busybox",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "init-pod-ip",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/etc/podinfo",
                                "mount_propagation": "None",
                                "name": "pod-info",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "node_name": "",
                        "node_selector": {},
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "nginx-config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "pod-info",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.nginx-namespace",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/nginx-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nginx-service",
                "namespace": "default",
                "resource_version": "25549",
                "uid": "afefafe4-6722-41a1-9f0e-92b3925c541e"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.67.160",
                "cluster_ips": [
                  "10.96.67.160"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 30001,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "80"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "nginx"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
